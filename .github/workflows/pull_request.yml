name: pull_request
run-name: Create and test Docker image

on:
  push:
    branches: [ "docker" ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/pull_request.yml'
#on:
#  pull_request:
#    branches: [ "docker" ]
#    paths:
#      - 'Dockerfile'
#      - '.github/workflows/pull_request.yml'

jobs:
  pl_docker:
    name: Create, build and test Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Extract metadata (tags, labels) for Docker
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: plitkarka/back_dev
          tags: |
            # Latest tag for master branch in DockerHub
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            # Tag for dev branch in DockerHub
            type=raw,value=dev-{{sha}},enable=${{ github.ref == format('refs/heads/{0}', 'docker') }}            

      - name: Build Docker image
        id: build_image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Run Docker container
        run: docker run -d --name back_dev -p 80:80 ${{ steps.build_image.outputs.imageid }} #plitkarka/back_dev:latest

      - name: Sleep for 10s
        run: sleep 10

      - name: Test Docker container
        id: test
        run: echo "HTTP_CODE=$(curl http://localhost/api/health)" >> "$GITHUB_OUTPUT" #echo "HTTP_CODE=$(curl -LI http://localhost/api/health -o /dev/null -w '%{http_code}\n' -s)" >> "$GITHUB_OUTPUT"

      - name: Info Docker container
        run: echo ${{ steps.test.outputs.HTTP_CODE }}
      #run: echo "CONTAINER_ID=$(docker run -d --name back_dev -p 80:80 --expose 8080 plitkarka/back_dev:latest)" >> $GITHUB_ENV
      #docker exec -it ${{ env.CONTAINER_ID }} curl -LI http://localhost/api/health -o /dev/null -w '%{http_code}\n' -s